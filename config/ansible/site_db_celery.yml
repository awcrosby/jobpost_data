---

- hosts: myhost  # playbook for database setup
  vars:
    dest_proj_path: /home/ubuntu/jobpost_data
  vars_files:
    - vars.yml
  tasks:
    ### MongoDB config
    - name: Add mongodb repo apt_key
      become: true
      apt_key: keyserver=hkp://keyserver.ubuntu.com:80 id=2930ADAE8CAF5059EE73BB4B58712A2291FA4AD5
    - name: Add mongodb sources list
      become: true
      shell: "echo 'deb [ arch=amd64,arm64 ] https://repo.mongodb.org/apt/ubuntu xenial/mongodb-org/3.6 multiverse' | sudo tee /etc/apt/sources.list.d/mongodb-org-3.6.list"
      changed_when: false
    - name: Update repositories cache and install "mongodb-org" package
      become: true
      apt: name=mongodb-org update_cache=yes
    - name: Start and enable mongod service
      become: true
      service: name=mongod state=started enabled=yes

    ### PostgreSQL config: http://blog.apcelent.com/using-ansible-to-set-up-postgresql.html
    - name: Install PostgreSQL
      become: true
      package: name="{{item}}" state=latest
      with_items:
        - postgresql
        - postgresql-contrib
        - libpq-dev
        - python3-psycopg2
    - name: Ensure the postgres service is running
      become: true
      service: name=postgresql state=started enabled=yes
    - name: Ensure postgres db is created
      become: true
      become_user: postgres
      postgresql_db: name={{ postgres_name }}
                 encoding='UTF-8'
                 lc_collate='en_US.UTF-8'
                 lc_ctype='en_US.UTF-8'
                 template='template0'
                 state=present
    - name: Ensure user created and can access db
      become: true
      become_user: postgres
      postgresql_user: db={{ postgres_name }}
                   name={{ postgres_user }}
                   password={{ postgres_pw }}
                   priv=ALL
                   state=present
    - name: Copy vars.yml file to remote
      copy:
        src: vars.yml
        dest: "{{dest_proj_path}}/config/ansible/vars.yml"
    - name: Changing permission of manage.py, adding "+x"
      file:
        dest: "{{dest_proj_path}}/manage.py"
        mode: +x
    - name: Make migrations for Django databases
      django_manage:
        command: "makemigrations --noinput"
        app_path: "{{dest_proj_path}}"
        virtualenv: "{{dest_proj_path}}/venv"
    - name: Migrate Django databases
      django_manage:
        command: migrate
        app_path: "{{dest_proj_path}}"
        virtualenv: "{{dest_proj_path}}/venv"

    ### Gunicorn, Nginx, and firewall config
    - name: Copy gunicorn service
      become: true
      copy:
        src: ../gunicorn.service
        dest: /etc/systemd/system/gunicorn.service
    - name: Start and enable on startup gunicorn
      become: true
      service: name=gunicorn.service state=started enabled=yes
    - name: Copy nginx config to replace the default
      become: true
      copy:
        src: ../nginx_config_pre_ssl
        dest: /etc/nginx/sites-available/default
    - name: Firewall turn on and allow OpenSSH
      become: true
      ufw: rule=allow name=OpenSSH state=enabled
    - name: Firewall allow nginx https and http (for redirect to ssl)
      become: true
      ufw: rule=allow name="Nginx Full"

- hosts: myhost  # Supervisord + Celery config
  tasks:
    - name: Create celery user to be used by celeryd and celerybeatd
      become: true
      user:
        name: celery
    - name: Copy supervisord config
      become: true
      copy:
        src: ../supervisord.conf
        dest: /etc/supervisor/supervisord.conf
    - name: Restart supervisor service
      become: true
      service: name=supervisor state=restarted enabled=yes
